version: 2
jobs:

  build-infra:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.com/Cloudground/Cloudground
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "infra/go/src/Cloudground/Gopkg.toml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: |
          mkdir -p /tmp/output
          go get -u github.com/golang/dep/cmd/dep
      - run:
          name: Prepare Go wrapper
          working_directory: infra/go/src/Cloudground
          command: |
            chmod +x gow.sh
      - run:
          name: Installing dependencies
          working_directory: infra/go/src/Cloudground
          command: |
            ./gow.sh dep ensure
      - save_cache:
          paths:
            - infra/go/src/Cloudground/vendor
          key: v1-dependencies-{{ checksum "infra/go/src/Cloudground/Gopkg.toml" }}
      - run:
          name: Build
          working_directory: infra/go/src/Cloudground
          command: |
            ./gow.sh go build  -o /tmp/output/Cloudground
      - persist_to_workspace:
          root: /tmp/output
          paths:
            - Cloudground

  build-spring:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/Cloudground

    environment:
      MAVEN_OPTS: -Xmx2048m
      TERM: dumb
    steps:
      - checkout
      - setup_remote_docker:
         docker_layer_caching: true
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "spring/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Prepare Gradle wrapper
          working_directory: spring
          command: |
            chmod +x gradlew
      - run:
          name: Installing dependencies
          working_directory: spring
          command: |
            ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.m2
            - ~/.gradle
          key: v1-dependencies-{{ checksum "spring/build.gradle" }}
      - run:
          name: Build
          working_directory: spring
          command: |
            ./gradlew build
      - persist_to_workspace:
          root: spring
          paths:
            - build/*

  docker-push-spring:
    docker:
      - image: microsoft/azure-cli:latest
    steps:
      - setup_remote_docker:
         docker_layer_caching: true
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Build Docker image
          working_directory: spring
          command: |
            docker build -t cloudground/spring:$CIRCLE_BRANCH .
      - run:
          name: Login to ACR
          command: |
            az login --service-principal --username ${ACR_SP_APP_ID} --password ${ACR_SP_PASSWORD} --tenant ${ACR_TENANT_ID}
      - run:
          name: Push Docker image
          command: |
            docker push cloudground/spring:$CIRCLE_BRANCH

  build-go:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.com/Cloudground/Cloudground
    steps:
      - checkout
      - setup_remote_docker:
         docker_layer_caching: true
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "go/src/Cloudground/Gopkg.toml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: |
          mkdir -p /tmp/output
          go get -u github.com/golang/dep/cmd/dep
      - run:
          name: Prepare Go wrapper
          working_directory: go/src/Cloudground
          command: |
            chmod +x gow.sh
      - run:
          name: Installing dependencies
          working_directory: go/src/Cloudground
          command: |
            ./gow.sh dep ensure
      - save_cache:
          paths:
            - go/src/Cloudground/vendor
          key: v1-dependencies-{{ checksum "go/src/Cloudground/Gopkg.toml" }}
      - run:
          name: Build
          working_directory: go/src/Cloudground
          command: |
            ./gow.sh go build  -o /tmp/output/Cloudground
#      - restore_cache:
#          keys:
#            - v1-{{ .Branch }}
#          paths:
#            - caches/app.tar
#      - run:
#          name: Load Docker image layer cache
#          command: |
#            set +o pipefail
#            docker load -i caches/app.tar | true
      - run:
          name: Build Docker image
          working_directory: go/src
          command: |
            docker build -t cloudground/go:$CIRCLE_BRANCH .
#      - run:
#          name: Save Docker image layer cache
#          command: |
#            mkdir -p caches
#            docker save -o caches/app.tar app
#      - save_cache:
#          key: v1-{{ .Branch }}-{{ epoch }}
#          paths:
#            - /caches/app.tar
      - persist_to_workspace:
          root: /tmp/output
          paths:
            - Cloudground

  build-nodejs:
    docker:
      - image: circleci/node:8
    working_directory: ~/Cloudground
    steps:
      - checkout
      - setup_remote_docker:
         docker_layer_caching: true
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "nodejs/package.json" }}
          - v1-dependencies-
      - run:
          name: Installing dependencies
          working_directory: nodejs
          command: |
            npm install
      - save_cache:
          paths:
            - nodejs/node_modules
          key: v1-dependencies-{{ checksum "nodejs/package.json" }}
      - run:
          name: Running tests
          working_directory: nodejs
          command: |
            npm run test
      - run:
          name: Build Docker image
          working_directory: nodejs
          command: |
            docker build -t cloudground/nodejs:$CIRCLE_BRANCH .
#      - run:
#          working_directory: nodejs
#          command: yarn ci

#      - persist_to_workspace:
#          root: ~/Cloudground/nodejs/dist
#          paths:
#            - index.html
#            - assets/*


workflows:
  version: 2

  ci:
    jobs:
      - build-infra
      - build-spring
      - build-go
      - build-nodejs
      - docker-push-spring:
          requires:
            - build-spring

ship-it:
    jobs:
      - build-go:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - build-node:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
